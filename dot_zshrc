# This file is being synced with Chezmoi

##########
# HISTORY
##########

HISTFILE=$HOME/.zsh_history
HISTSIZE=100000
SAVEHIST=100000

# Immediately append to history file:
setopt INC_APPEND_HISTORY

# Record timestamp in history:
setopt EXTENDED_HISTORY

# Expire duplicate entries first when trimming history:
setopt HIST_EXPIRE_DUPS_FIRST

# Dont record an entry that was just recorded again:
setopt HIST_IGNORE_DUPS

# Delete old recorded entry if new entry is a duplicate:
setopt HIST_IGNORE_ALL_DUPS

# Do not display a line previously found:
setopt HIST_FIND_NO_DUPS

# Dont record an entry starting with a space:
setopt HIST_IGNORE_SPACE

# Dont write duplicate entries in the history file:
setopt HIST_SAVE_NO_DUPS

# Share history between all sessions:
setopt SHARE_HISTORY

# Execute commands using history (e.g.: using !$) immediatel:
unsetopt HIST_VERIFY

##### HISTORY END ####

####################################################################################

### Check if the OS is macOS
if [[ "$OSTYPE" == "darwin"* ]]; then
	echo "Setting mac os specific configs"
	### Path config
	export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$HOME/.toolbox/bin:$PATH"
	export PATH=$PATH:$HOME/apache-maven-3.9.6/bin
	export PATH="/opt/homebrew/opt/node@18/bin:$PATH"
	export PATH="/opt/homebrew/opt/node@16/bin:$PATH"
	export PATH="$HOME/.luarocks/bin:$PATH"

	### Ruby setup
	eval "$(rbenv init -)"

	### Set up mise for runtime management
	# eval "$(mise activate zsh)"

	### Setup homebrew
	eval "$(/opt/homebrew/bin/brew shellenv)"

fi

### Check if the OS is Linux
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
	echo "Setting linux specific configs"
	### Path config
	export PATH="/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$HOME/.toolbox/bin:$PATH"
	export PATH=$PATH:$HOME/apache-maven-3.9.6/bin
	export PATH="/opt/homebrew/opt/node@18/bin:$PATH"
	export PATH=$PATH:/apollo/env/envImprovement/bin

	### Setup homebrew
	eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

export PATH="$HOME/.config/scripts:$PATH"

# Add this to your .bashrc or .zshrc
tls() {
    local session
    session=$(tmux list-sessions -F "#{session_name}" | fzf --height 40% --reverse)
    
    if [[ -n "$session" ]]; then
        if [[ -n "$TMUX" ]]; then
            tmux switch-client -t "$session"
        else
            tmux attach -t "$session"
        fi
    fi
}
bindkey -s '^t' 'tls\n'


## General ZSH config
ZSH_THEME="robbyrussell"
plugins=(git zsh-autosuggestions zsh-syntax-highlighting fast-syntax-highlighting vi-mode)
export EDITOR="nvim"
export VISUAL="nvim"

### VI_MODE config
VI_MODE_RESET_PROMPT_ON_MODE_CHANGE=true
VI_MODE_SET_CURSOR=true
VI_MODE_CURSOR_VISUAL=5

### Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

### if you wish to use IMDS set AWS_EC2_METADATA_DISABLED=false
export AWS_EC2_METADATA_DISABLED=true

### General sourcing
source $ZSH/oh-my-zsh.sh
# source <(fzf --zsh)

#### Enable autocompletion for mechanic.
[ -f "/local$HOME/.local/share/mechanic/complete.zsh" ] && source "/local$HOME/.local/share/mechanic/complete.zsh"

### aliases
alias bb="brazil-build"
alias bbr="brazil-recursive-cmd brazil-build"
alias dv="ssh -o ServerAliveInterval=10 dev-dsk-pandakas-2c-92528960.us-west-2.amazon.com"
alias ls="eza --oneline"
alias vim="nvim"
alias cm="chezmoi"

### PROMPT
PROMPT='%{$fg[yellow]%}%m%}%{$fg_bold[cyan]%} %c $(git_prompt_info)%{$reset_color%}'

## Key bindings

### Tmux sessionizer
bindkey -s '^f' 'tmux-sessionizer\n'

. "$HOME/.local/bin/env"

. "$HOME/.atuin/bin/env"

eval "$(atuin init zsh)"
eval "$(~/.local/bin/mise activate zsh)"
alias config='/usr/bin/git --git-dir=/local/home/pandakas/.myconf/ --work-tree=/local/home/pandakas'
